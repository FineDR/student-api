version: "3.9"

services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_net

  web:
    build: .
    container_name: student_backend
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app_net

  frontend1:
    build:
      context: .
    container_name: frontend_1
    ports:
      - "3001:80"
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 30s

  frontend2:
    build:
      context: .
    container_name: frontend_2
    ports:
      - "3002:80"
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 30s

  nginx:
    image: nginx:latest
    container_name: load_balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend1
      - frontend2
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net:
